/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BlueprintsImport } from './routes/blueprints'
import { Route as MyProfileImport } from './routes/my.profile'
import { Route as MyCollectionsImport } from './routes/my.collections'
import { Route as MyCollectionsIdImport } from './routes/my.collections_.$id'

// Create/Update Routes

const BlueprintsRoute = BlueprintsImport.update({
  id: '/blueprints',
  path: '/blueprints',
  getParentRoute: () => rootRoute,
} as any)

const MyProfileRoute = MyProfileImport.update({
  id: '/my/profile',
  path: '/my/profile',
  getParentRoute: () => rootRoute,
} as any)

const MyCollectionsRoute = MyCollectionsImport.update({
  id: '/my/collections',
  path: '/my/collections',
  getParentRoute: () => rootRoute,
} as any)

const MyCollectionsIdRoute = MyCollectionsIdImport.update({
  id: '/my/collections_/$id',
  path: '/my/collections/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/blueprints': {
      id: '/blueprints'
      path: '/blueprints'
      fullPath: '/blueprints'
      preLoaderRoute: typeof BlueprintsImport
      parentRoute: typeof rootRoute
    }
    '/my/collections': {
      id: '/my/collections'
      path: '/my/collections'
      fullPath: '/my/collections'
      preLoaderRoute: typeof MyCollectionsImport
      parentRoute: typeof rootRoute
    }
    '/my/profile': {
      id: '/my/profile'
      path: '/my/profile'
      fullPath: '/my/profile'
      preLoaderRoute: typeof MyProfileImport
      parentRoute: typeof rootRoute
    }
    '/my/collections_/$id': {
      id: '/my/collections_/$id'
      path: '/my/collections/$id'
      fullPath: '/my/collections/$id'
      preLoaderRoute: typeof MyCollectionsIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/blueprints': typeof BlueprintsRoute
  '/my/collections': typeof MyCollectionsRoute
  '/my/profile': typeof MyProfileRoute
  '/my/collections/$id': typeof MyCollectionsIdRoute
}

export interface FileRoutesByTo {
  '/blueprints': typeof BlueprintsRoute
  '/my/collections': typeof MyCollectionsRoute
  '/my/profile': typeof MyProfileRoute
  '/my/collections/$id': typeof MyCollectionsIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/blueprints': typeof BlueprintsRoute
  '/my/collections': typeof MyCollectionsRoute
  '/my/profile': typeof MyProfileRoute
  '/my/collections_/$id': typeof MyCollectionsIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/blueprints'
    | '/my/collections'
    | '/my/profile'
    | '/my/collections/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/blueprints' | '/my/collections' | '/my/profile' | '/my/collections/$id'
  id:
    | '__root__'
    | '/blueprints'
    | '/my/collections'
    | '/my/profile'
    | '/my/collections_/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  BlueprintsRoute: typeof BlueprintsRoute
  MyCollectionsRoute: typeof MyCollectionsRoute
  MyProfileRoute: typeof MyProfileRoute
  MyCollectionsIdRoute: typeof MyCollectionsIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  BlueprintsRoute: BlueprintsRoute,
  MyCollectionsRoute: MyCollectionsRoute,
  MyProfileRoute: MyProfileRoute,
  MyCollectionsIdRoute: MyCollectionsIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/blueprints",
        "/my/collections",
        "/my/profile",
        "/my/collections_/$id"
      ]
    },
    "/blueprints": {
      "filePath": "blueprints.tsx"
    },
    "/my/collections": {
      "filePath": "my.collections.tsx"
    },
    "/my/profile": {
      "filePath": "my.profile.tsx"
    },
    "/my/collections_/$id": {
      "filePath": "my.collections_.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
