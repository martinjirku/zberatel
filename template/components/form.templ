package components

type TextInputMV struct {
	Label       string
	Name        string
	Type        string
	Placeholder string
	Value       string
	Errors      []string
}

func NewTextInputMV(label, name string) TextInputMV {
	return TextInputMV{
		Label: label,
		Name:  name,
		Type:  "text",
	}
}

func (t TextInputMV) WithValue(value string) TextInputMV {
	t.Value = value
	return t
}

func (t TextInputMV) WithPlaceholder(placeholder string) TextInputMV {
	t.Placeholder = placeholder
	return t
}

func (t TextInputMV) WithType(typ string) TextInputMV {
	t.Type = typ
	return t
}

func (t TextInputMV) WithErrors(errors ...string) TextInputMV {
	t.Errors = errors
	return t
}

templ TextInput(vm TextInputMV) {
	<label class="block">
		{ vm.Label }
		<input
 			class={
				"w-full mt-1 border-2 p-2 rounded-md",
				templ.KV("border-red-500", len(vm.Errors) > 0),
				templ.KV("border-gray-300", len(vm.Errors) == 0),
			}
 			type={ vm.Type }
 			name={ vm.Name }
 			placeholder={ vm.Placeholder }
 			value={ vm.Value }
		/>
		for _, err := range vm.Errors {
			<p class="text-red-500 text-xs italic">{ err }</p>
		}
	</label>
}
