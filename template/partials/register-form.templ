package partials

import "jirku.sk/zberatel/template/components"
import "github.com/justinas/nosurf"

type RegisterFormMV struct {
	Username             string `validate:"required,min=3,max=20"`
	Email                string `validate:"required,email"`
	Password             string `validate:"required,min=8,max=64,eqfield=PasswordConfirmation"`
	PasswordConfirmation string
	Token                string `form:"csrf_token" validate:"required"`
	Errors               map[string][]string
	RecaptchaKey         string
}

func NewRegisterFormMV(csfrToken, recaptcha string) RegisterFormMV {
	return RegisterFormMV{
		Token:        csfrToken,
		RecaptchaKey: recaptcha,
		Errors:       make(map[string][]string),
	}
}

func (mv *RegisterFormMV) GetError(field string) []string {
	if v, ok := mv.Errors[field]; ok {
		return v
	}
	return []string{}
}

func (mv *RegisterFormMV) IsValid() bool {
	return len(mv.Errors) == 0
}

func (mv *RegisterFormMV) hasRecaptcha() bool {
	return mv.RecaptchaKey != ""
}

func (mv *RegisterFormMV) SetError(field string, err string) {
	if _, ok := mv.Errors[field]; !ok {
		mv.Errors[field] = []string{}
	}
	mv.Errors[field] = append(mv.Errors[field], err)
}

templ RegisterForm(mv RegisterFormMV) {
	<form id="register-form" class="flex flex-col space-y-4" action="/auth/register" method="post">
		@components.TextInput(components.
            NewTextInputMV("Username", "Username").
            WithPlaceholder("Fill in your username").
			WithErrors(mv.GetError("Username")...).
            WithValue(mv.Username))
		@components.TextInput(components.
            NewTextInputMV("Email", "Email").
            WithPlaceholder("Fill in your email").
			WithErrors(mv.GetError("Email")...).
            WithValue(mv.Email))
		@components.TextInput(components.
            NewTextInputMV("Password", "Password").
            WithPlaceholder("Specify the password").
			WithErrors(mv.GetError("Password")...).
            WithType("password"))
		@components.TextInput(components.
            NewTextInputMV("Password Confirmation", "PasswordConfirmation").
            WithType("password").
			WithErrors(mv.GetError("PasswordConfirmation")...).
            WithPlaceholder("Repeat the password"))
		<input type="hidden" name={ nosurf.FormFieldName } value={ mv.Token }/>
		<input
 			class={ "mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded",
			templ.KV("g-recaptcha", mv.hasRecaptcha()) }
 			if mv.hasRecaptcha() {
				data-sitekey={ mv.RecaptchaKey }
				data-callback="onSubmit"
				data-action="submit"
			}
 			type="submit"
 			value="Register"
		/>
	</form>
	<script>
	 	function onSubmit(token) {
			document.getElementById("register-form").submit();
		}
	</script>
	<script src="https://www.google.com/recaptcha/api.js"></script>
}
