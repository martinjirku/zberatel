package partials

import "jirku.sk/zberatel/template/components"
import "github.com/justinas/nosurf"

type RegisterFormMV struct {
	Username          string `validate:"required,min=3,max=20"`
	Email             string `validate:"required,email"`
	Password          string `validate:"required,min=8,max=64"`
	ConfirmedPassword string `validate:"required,eqfield=Password"`
	Token             string `form:"csrf_token" validate:"required"`

	Errors map[string][]string
}

func NewRegisterFormMV(token string) RegisterFormMV {
	return RegisterFormMV{
		Token:  token,
		Errors: make(map[string][]string),
	}
}

func (mv RegisterFormMV) GetError(field string) []string {
	if v, ok := mv.Errors[field]; ok {
		return v
	}
	return []string{}
}

templ RegisterForm(mv RegisterFormMV) {
	<form class="flex flex-col space-y-4" action="/auth/register" method="post">
		@components.TextInput(components.
            NewTextInputMV("Username", "Username").
            WithPlaceholder("Fill in your username").
			WithErrors(mv.GetError("Username")...).
            WithValue(mv.Username))
		@components.TextInput(components.
            NewTextInputMV("Email", "Email").
            WithPlaceholder("Fill in your email").
			WithErrors(mv.GetError("Email")...).
            WithValue(mv.Email))
		@components.TextInput(components.
            NewTextInputMV("Password", "Password").
            WithPlaceholder("Specify the password").
			WithErrors(mv.GetError("Password")...).
            WithType("password").
            WithValue(mv.Password))
		@components.TextInput(components.
            NewTextInputMV("Confirm Password", "ConfirmedPassword").
            WithType("password").
			WithErrors(mv.GetError("Password")...).
            WithPlaceholder("Repeat the password"))
		<input type="hidden" name={ nosurf.FormFieldName } value={ mv.Token }/>
		<input class="mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" type="submit" value="Register"/>
	</form>
}
